const express = require("express");
const bodyParser = require("body-parser");
const EventEmitter = require("events");

/**
 * A Webhook-Manager to manage a couple of POST-webhooks.
 */
class WebhookManager extends EventEmitter {
    /**
     * Create a new WebhookManager listening on the given port.
     *
     * @param {number} port The port, on which will be listened for webhooks.
     */
    constructor(port) {
        super();
        this.PORT = port;
        this.start();
        this.webhooks = {};
    }

    /**
     * Register a new WebhookListener.
     *
     * @param {string} uri the uri to listen to for webhooks.
     * @param {function(Object): void} cb the function to be called, when webhook is received.
     */
    on(uri, cb) {
        super.on(uri, cb);
        if (uri.startsWith("/") || uri === "*") {
            this.webhooks[uri] = cb;
        }
    }

    /**
     * Start the entire WebhookListener and setup express.
     */
    start() {
        this.router = express();
        this.router.use(bodyParser.json());

        /**
         * Start listening on the given port.
         */
        this.router.listen(this.PORT, () => {
            this.emit("ready");
        });

        /**
         * Listen for all URLS and then check, if a listener for a proper one is set up.
         */
        this.router.post("*", (req, res) => {
            /**
             * Send fast response, so the sender doesn't get errors.
             */
            res.status(200);
            res.send();

            const uri = req.url;
            if (this.webhooks[uri]) {
                this.emit(uri, req);
            }
        });
    }
}

module.exports = WebhookManager;
